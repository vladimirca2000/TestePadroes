################################################################################
# GERAL
################################################################################
# SO e arquivos temporários
.DS_Store
Thumbs.db
ehthumbs.db
Icon?
*.swp
*.swo
*.tmp
*.temp

# Logs
*.log
logs/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Arquivos de backup
*.bak
*.orig
*.rej
*.old

################################################################################
# GIT
################################################################################
# Arquivos de merge/patch temporários
*.orig
*.patch
*.diff

################################################################################
# DOTNET / C# / VISUAL STUDIO / RIDER / RESHARPER
################################################################################
# Saídas de build
**/bin/
**/obj/
**/out/
**/publish/
**/artifacts/

# Testes
**/TestResults/
**/*.trx
**/*.coverage
**/*.coveragexml

# Visual Studio
.vs/
*.user
*.suo
*.userosscache
*.sln.docstates

# Rider / JetBrains
.idea/
*.iml
.shelf/
# ReSharper
_ReSharper.*
*.[Rr]e[Ss]harper
*.DotSettings.user

# NuGet
*.nupkg
# Pasta legacy de packages (se seu projeto ainda usa pasta 'packages/')
packages/
# Cache local do NuGet
.nuget/
# Arquivos de lock do NuGet (mantenha o .lock.json se você versiona)
project.lock.json
project.fragment.lock.json

# MSBuild
*.cache
*.dbmdl
*.mdb
*.pdb

# Publishing profiles (“.pubxml.user” contém credenciais locais)
**/*.pubxml.user

# IIS / Hosting
app_offline.htm

# Entity Framework (geralmente versiona-se Migrations; não ignore)
# Se desejar ignorar migrações locais específicas, adicione padrões aqui.

################################################################################
# CONFIGURAÇÕES / SEGREDOS (.NET)
################################################################################
# User Secrets (normalmente ficam fora do repo; ignore se aparecerem)
secrets.json

# AppSettings locais
appsettings.Local.json
appsettings.*.Local.json
# Opcional: se não quiser versionar Development
# appsettings.Development.json

################################################################################
# LIBMAN (se utilizar no ASP.NET Core)
################################################################################
# wwwroot/lib é restaurado pelo libman.json — pode ser ignorado
wwwroot/lib/

################################################################################
# ANGULAR 20 / NODE
################################################################################
# Dependências
node_modules/
# Saídas de build Angular
dist/
dist-ssr/
out-tsc/

# Cache Angular CLI
.angular/cache/
.angular/*

# Cobertura
coverage/
.nyc_output/

# Tipos e caches
typings/
bower_components/

# Ferramentas
.cache/
.tmp/
temp/
tmp/

# Ambiente (mantenha um .env.example)
.env
.env.*
!.env.example

# Lockfiles – geralmente DEVEM ser versionados; por isso, não ignore:
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

################################################################################
# FERRAMENTAS / IDE
################################################################################
# VS Code: ignore a pasta, mas permita arquivos úteis do workspace
.vscode/*
!.vscode/extensions.json
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json

# WebStorm/JetBrains já coberto acima (/.idea)

################################################################################
# DOCKER (se usar .dockerignore, prefira lá; aqui apenas genéricos)
################################################################################
*.pid
*.seed
*.pid.lock

################################################################################
# OUTROS
################################################################################
# Arquivos de relatórios/artefatos temporários
*.rsuser
*.opendb
*.VC.db